
a.out:     file format elf64-x86-64
a.out


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	insb   (%dx),%es:(%rdi)
  40023a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  400246:	78 2d                	js     400275 <_init-0x1db>
  400248:	78 38                	js     400282 <_init-0x1ce>
  40024a:	36                   	ss
  40024b:	2d 36 34 2e 73       	sub    $0x732e3436,%eax
  400250:	6f                   	outsl  %ds:(%rsi),(%dx)
  400251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    $0x0,%al
  400256:	00 00                	add    %al,(%rax)
  400258:	10 00                	adc    %al,(%rax)
  40025a:	00 00                	add    %al,(%rax)
  40025c:	01 00                	add    %eax,(%rax)
  40025e:	00 00                	add    %al,(%rax)
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push %rbp
  400263:	00 00                	add    %al,(%rax)
  400265:	00 00                	add    %al,(%rax)
  400267:	00 02                	add    %al,(%rdx)
  400269:	00 00                	add    %al,(%rax)
  40026b:	00 06                	add    %al,(%rsi)
  40026d:	00 00                	add    %al,(%rax)
  40026f:	00 18                	add    %bl,(%rax)
  400271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    $0x0,%al
  400276:	00 00                	add    %al,(%rax)
  400278:	14 00                	adc    $0x0,%al
  40027a:	00 00                	add    %al,(%rax)
  40027c:	03 00                	add    (%rax),%eax
  40027e:	00 00                	add    %al,(%rax)
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push %rbp
  400283:	00 0c e2             	add    %cl,(%rdx,%riz,8)
  400286:	dc 5d 7d             	fcompl 0x7d(%rbp)
  400289:	8e 15 8b a6 75 ce    	mov    -0x318a5975(%rip),%ss        # ffffffffceb5a91a <_end+0xffffffffce5598ba>
  40028f:	ee                   	out    %al,(%dx)
  400290:	26                   	es
  400291:	52                   	push   %rdx
  400292:	cc                   	int3   
  400293:	e3 76                	jrcxz  40030b <_init-0x145>
  400295:	76 9d                	jbe    400234 <_init-0x21c>
  400297:	49                   	rex.WB

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    %eax,(%rax)
  40029a:	00 00                	add    %al,(%rax)
  40029c:	01 00                	add    %eax,(%rax)
  40029e:	00 00                	add    %al,(%rax)
  4002a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	0b 00                	or     (%rax),%eax
  4002d2:	00 00                	add    %al,(%rax)
  4002d4:	12 00                	adc    (%rax),%al
	...
  4002e6:	00 00                	add    %al,(%rax)
  4002e8:	10 00                	adc    %al,(%rax)
  4002ea:	00 00                	add    %al,(%rax)
  4002ec:	12 00                	adc    (%rax),%al
	...
  4002fe:	00 00                	add    %al,(%rax)
  400300:	1e                   	(bad)  
  400301:	00 00                	add    %al,(%rax)
  400303:	00 12                	add    %dl,(%rdx)
	...
  400315:	00 00                	add    %al,(%rax)
  400317:	00 30                	add    %dh,(%rax)
  400319:	00 00                	add    %al,(%rax)
  40031b:	00 20                	add    %ah,(%rax)
	...
  40032d:	00 00                	add    %al,(%rax)
  40032f:	00 17                	add    %dl,(%rdi)
  400331:	00 00                	add    %al,(%rax)
  400333:	00 12                	add    %dl,(%rdx)
	...

Disassembly of section .dynstr:

0000000000400348 <.dynstr>:
  400348:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  40034c:	63 2e                	movslq (%rsi),%ebp
  40034e:	73 6f                	jae    4003bf <_init-0x91>
  400350:	2e 36 00 70 75       	cs add %dh,%cs:%ss:0x75(%rax)
  400355:	74 73                	je     4003ca <_init-0x86>
  400357:	00 70 72             	add    %dh,0x72(%rax)
  40035a:	69 6e 74 66 00 6d 61 	imul   $0x616d0066,0x74(%rsi),%ebp
  400361:	6c                   	insb   (%dx),%es:(%rdi)
  400362:	6c                   	insb   (%dx),%es:(%rdi)
  400363:	6f                   	outsl  %ds:(%rsi),(%dx)
  400364:	63 00                	movslq (%rax),%eax
  400366:	5f                   	pop    %rdi
  400367:	5f                   	pop    %rdi
  400368:	6c                   	insb   (%dx),%es:(%rdi)
  400369:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  400370:	72 74                	jb     4003e6 <_init-0x6a>
  400372:	5f                   	pop    %rdi
  400373:	6d                   	insl   (%dx),%es:(%rdi)
  400374:	61                   	(bad)  
  400375:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%rsi),%ebp
  40037c:	6f                   	outsl  %ds:(%rsi),(%dx)
  40037d:	6e                   	outsb  %ds:(%rsi),(%dx)
  40037e:	5f                   	pop    %rdi
  40037f:	73 74                	jae    4003f5 <_init-0x5b>
  400381:	61                   	(bad)  
  400382:	72 74                	jb     4003f8 <_init-0x58>
  400384:	5f                   	pop    %rdi
  400385:	5f                   	pop    %rdi
  400386:	00 47 4c             	add    %al,0x4c(%rdi)
  400389:	49                   	rex.WB
  40038a:	42                   	rex.X
  40038b:	43 5f                	rex.XB pop %r15
  40038d:	32 2e                	xor    (%rsi),%ch
  40038f:	32 2e                	xor    (%rsi),%ch
  400391:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000400394 <.gnu.version>:
  400394:	00 00                	add    %al,(%rax)
  400396:	02 00                	add    (%rax),%al
  400398:	02 00                	add    (%rax),%al
  40039a:	02 00                	add    (%rax),%al
  40039c:	00 00                	add    %al,(%rax)
  40039e:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

00000000004003a0 <.gnu.version_r>:
  4003a0:	01 00                	add    %eax,(%rax)
  4003a2:	01 00                	add    %eax,(%rax)
  4003a4:	01 00                	add    %eax,(%rax)
  4003a6:	00 00                	add    %al,(%rax)
  4003a8:	10 00                	adc    %al,(%rax)
  4003aa:	00 00                	add    %al,(%rax)
  4003ac:	00 00                	add    %al,(%rax)
  4003ae:	00 00                	add    %al,(%rax)
  4003b0:	75 1a                	jne    4003cc <_init-0x84>
  4003b2:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  4003b8:	3f                   	(bad)  
  4003b9:	00 00                	add    %al,(%rax)
  4003bb:	00 00                	add    %al,(%rax)
  4003bd:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000004003c0 <.rela.dyn>:
  4003c0:	f8                   	clc    
  4003c1:	0f 60 00             	punpcklbw (%rax),%mm0
  4003c4:	00 00                	add    %al,(%rax)
  4003c6:	00 00                	add    %al,(%rax)
  4003c8:	06                   	(bad)  
  4003c9:	00 00                	add    %al,(%rax)
  4003cb:	00 04 00             	add    %al,(%rax,%rax,1)
	...

Disassembly of section .rela.plt:

00000000004003d8 <.rela.plt>:
  4003d8:	18 10                	sbb    %dl,(%rax)
  4003da:	60                   	(bad)  
  4003db:	00 00                	add    %al,(%rax)
  4003dd:	00 00                	add    %al,(%rax)
  4003df:	00 07                	add    %al,(%rdi)
  4003e1:	00 00                	add    %al,(%rax)
  4003e3:	00 01                	add    %al,(%rcx)
	...
  4003ed:	00 00                	add    %al,(%rax)
  4003ef:	00 20                	add    %ah,(%rax)
  4003f1:	10 60 00             	adc    %ah,0x0(%rax)
  4003f4:	00 00                	add    %al,(%rax)
  4003f6:	00 00                	add    %al,(%rax)
  4003f8:	07                   	(bad)  
  4003f9:	00 00                	add    %al,(%rax)
  4003fb:	00 02                	add    %al,(%rdx)
	...
  400405:	00 00                	add    %al,(%rax)
  400407:	00 28                	add    %ch,(%rax)
  400409:	10 60 00             	adc    %ah,0x0(%rax)
  40040c:	00 00                	add    %al,(%rax)
  40040e:	00 00                	add    %al,(%rax)
  400410:	07                   	(bad)  
  400411:	00 00                	add    %al,(%rax)
  400413:	00 03                	add    %al,(%rbx)
	...
  40041d:	00 00                	add    %al,(%rax)
  40041f:	00 30                	add    %dh,(%rax)
  400421:	10 60 00             	adc    %ah,0x0(%rax)
  400424:	00 00                	add    %al,(%rax)
  400426:	00 00                	add    %al,(%rax)
  400428:	07                   	(bad)  
  400429:	00 00                	add    %al,(%rax)
  40042b:	00 04 00             	add    %al,(%rax,%rax,1)
	...
  400436:	00 00                	add    %al,(%rax)
  400438:	38 10                	cmp    %dl,(%rax)
  40043a:	60                   	(bad)  
  40043b:	00 00                	add    %al,(%rax)
  40043d:	00 00                	add    %al,(%rax)
  40043f:	00 07                	add    %al,(%rdi)
  400441:	00 00                	add    %al,(%rax)
  400443:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 400449 <_init-0x7>
  400449:	00 00                	add    %al,(%rax)
  40044b:	00 00                	add    %al,(%rax)
  40044d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init:

0000000000400450 <_init>:
_init():
  400450:	48 83 ec 08          	sub    $0x8,%rsp
  400454:	48 8b 05 9d 0b 20 00 	mov    0x200b9d(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d0>
  40045b:	48 85 c0             	test   %rax,%rax
  40045e:	74 05                	je     400465 <_init+0x15>
  400460:	e8 4b 00 00 00       	callq  4004b0 <__gmon_start__@plt>
  400465:	48 83 c4 08          	add    $0x8,%rsp
  400469:	c3                   	retq   

Disassembly of section .plt:

0000000000400470 <puts@plt-0x10>:
  400470:	ff 35 92 0b 20 00    	pushq  0x200b92(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400476:	ff 25 94 0b 20 00    	jmpq   *0x200b94(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40047c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400480 <puts@plt>:
  400480:	ff 25 92 0b 20 00    	jmpq   *0x200b92(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400486:	68 00 00 00 00       	pushq  $0x0
  40048b:	e9 e0 ff ff ff       	jmpq   400470 <_init+0x20>

0000000000400490 <printf@plt>:
  400490:	ff 25 8a 0b 20 00    	jmpq   *0x200b8a(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400496:	68 01 00 00 00       	pushq  $0x1
  40049b:	e9 d0 ff ff ff       	jmpq   400470 <_init+0x20>

00000000004004a0 <__libc_start_main@plt>:
  4004a0:	ff 25 82 0b 20 00    	jmpq   *0x200b82(%rip)        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  4004a6:	68 02 00 00 00       	pushq  $0x2
  4004ab:	e9 c0 ff ff ff       	jmpq   400470 <_init+0x20>

00000000004004b0 <__gmon_start__@plt>:
  4004b0:	ff 25 7a 0b 20 00    	jmpq   *0x200b7a(%rip)        # 601030 <_GLOBAL_OFFSET_TABLE_+0x30>
  4004b6:	68 03 00 00 00       	pushq  $0x3
  4004bb:	e9 b0 ff ff ff       	jmpq   400470 <_init+0x20>

00000000004004c0 <malloc@plt>:
  4004c0:	ff 25 72 0b 20 00    	jmpq   *0x200b72(%rip)        # 601038 <_GLOBAL_OFFSET_TABLE_+0x38>
  4004c6:	68 04 00 00 00       	pushq  $0x4
  4004cb:	e9 a0 ff ff ff       	jmpq   400470 <_init+0x20>

Disassembly of section .text:

00000000004004d0 <_start>:
_start():
  4004d0:	31 ed                	xor    %ebp,%ebp
  4004d2:	49 89 d1             	mov    %rdx,%r9
  4004d5:	5e                   	pop    %rsi
  4004d6:	48 89 e2             	mov    %rsp,%rdx
  4004d9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4004dd:	50                   	push   %rax
  4004de:	54                   	push   %rsp
  4004df:	49 c7 c0 80 07 40 00 	mov    $0x400780,%r8
  4004e6:	48 c7 c1 10 07 40 00 	mov    $0x400710,%rcx
  4004ed:	48 c7 c7 02 06 40 00 	mov    $0x400602,%rdi
  4004f4:	e8 a7 ff ff ff       	callq  4004a0 <__libc_start_main@plt>
  4004f9:	f4                   	hlt    
  4004fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400500 <deregister_tm_clones>:
deregister_tm_clones():
  400500:	b8 57 10 60 00       	mov    $0x601057,%eax
  400505:	55                   	push   %rbp
  400506:	48 2d 50 10 60 00    	sub    $0x601050,%rax
  40050c:	48 83 f8 0e          	cmp    $0xe,%rax
  400510:	48 89 e5             	mov    %rsp,%rbp
  400513:	76 1b                	jbe    400530 <deregister_tm_clones+0x30>
  400515:	b8 00 00 00 00       	mov    $0x0,%eax
  40051a:	48 85 c0             	test   %rax,%rax
  40051d:	74 11                	je     400530 <deregister_tm_clones+0x30>
  40051f:	5d                   	pop    %rbp
  400520:	bf 50 10 60 00       	mov    $0x601050,%edi
  400525:	ff e0                	jmpq   *%rax
  400527:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40052e:	00 00 
  400530:	5d                   	pop    %rbp
  400531:	c3                   	retq   
  400532:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  400539:	1f 84 00 00 00 00 00 

0000000000400540 <register_tm_clones>:
register_tm_clones():
  400540:	be 50 10 60 00       	mov    $0x601050,%esi
  400545:	55                   	push   %rbp
  400546:	48 81 ee 50 10 60 00 	sub    $0x601050,%rsi
  40054d:	48 c1 fe 03          	sar    $0x3,%rsi
  400551:	48 89 e5             	mov    %rsp,%rbp
  400554:	48 89 f0             	mov    %rsi,%rax
  400557:	48 c1 e8 3f          	shr    $0x3f,%rax
  40055b:	48 01 c6             	add    %rax,%rsi
  40055e:	48 d1 fe             	sar    %rsi
  400561:	74 15                	je     400578 <register_tm_clones+0x38>
  400563:	b8 00 00 00 00       	mov    $0x0,%eax
  400568:	48 85 c0             	test   %rax,%rax
  40056b:	74 0b                	je     400578 <register_tm_clones+0x38>
  40056d:	5d                   	pop    %rbp
  40056e:	bf 50 10 60 00       	mov    $0x601050,%edi
  400573:	ff e0                	jmpq   *%rax
  400575:	0f 1f 00             	nopl   (%rax)
  400578:	5d                   	pop    %rbp
  400579:	c3                   	retq   
  40057a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400580 <__do_global_dtors_aux>:
__do_global_dtors_aux():
  400580:	80 3d c9 0a 20 00 00 	cmpb   $0x0,0x200ac9(%rip)        # 601050 <__TMC_END__>
  400587:	75 11                	jne    40059a <__do_global_dtors_aux+0x1a>
  400589:	55                   	push   %rbp
  40058a:	48 89 e5             	mov    %rsp,%rbp
  40058d:	e8 6e ff ff ff       	callq  400500 <deregister_tm_clones>
  400592:	5d                   	pop    %rbp
  400593:	c6 05 b6 0a 20 00 01 	movb   $0x1,0x200ab6(%rip)        # 601050 <__TMC_END__>
  40059a:	f3 c3                	repz retq 
  40059c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004005a0 <frame_dummy>:
frame_dummy():
  4005a0:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  4005a5:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  4005a9:	75 05                	jne    4005b0 <frame_dummy+0x10>
  4005ab:	eb 93                	jmp    400540 <register_tm_clones>
  4005ad:	0f 1f 00             	nopl   (%rax)
  4005b0:	b8 00 00 00 00       	mov    $0x0,%eax
  4005b5:	48 85 c0             	test   %rax,%rax
  4005b8:	74 f1                	je     4005ab <frame_dummy+0xb>
  4005ba:	55                   	push   %rbp
  4005bb:	48 89 e5             	mov    %rsp,%rbp
  4005be:	ff d0                	callq  *%rax
  4005c0:	5d                   	pop    %rbp
  4005c1:	e9 7a ff ff ff       	jmpq   400540 <register_tm_clones>

00000000004005c6 <process>:
process():
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:20
} listnode;

typedef  listnode  *linklist;
listnode  *p;
void process(uint64_t data1, uint64_t data2, int temp, int data)
{
  4005c6:	55                   	push   %rbp
  4005c7:	48 89 e5             	mov    %rsp,%rbp
  4005ca:	48 83 ec 20          	sub    $0x20,%rsp
  4005ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4005d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4005d6:	89 55 ec             	mov    %edx,-0x14(%rbp)
  4005d9:	89 4d e8             	mov    %ecx,-0x18(%rbp)
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:21
    printf("data1=%ld, data2=%ld, temp =%d, data = %d\n",data1, data2, temp, data);
  4005dc:	8b 75 e8             	mov    -0x18(%rbp),%esi
  4005df:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  4005e2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4005e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4005ea:	41 89 f0             	mov    %esi,%r8d
  4005ed:	48 89 c6             	mov    %rax,%rsi
  4005f0:	bf 98 07 40 00       	mov    $0x400798,%edi
  4005f5:	b8 00 00 00 00       	mov    $0x0,%eax
  4005fa:	e8 91 fe ff ff       	callq  400490 <printf@plt>
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:22
}
  4005ff:	90                   	nop
  400600:	c9                   	leaveq 
  400601:	c3                   	retq   

0000000000400602 <main>:
main():
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:24
void main()
{
  400602:	55                   	push   %rbp
  400603:	48 89 e5             	mov    %rsp,%rbp
  400606:	48 83 ec 20          	sub    $0x20,%rsp
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:25
    printf("creating\n");
  40060a:	bf c3 07 40 00       	mov    $0x4007c3,%edi
  40060f:	e8 6c fe ff ff       	callq  400480 <puts@plt>
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:29
    unsigned int ch;
    linklist  head;
    listnode  *p;
    head=NULL;/*初始化为空*/
  400614:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
  40061b:	00 
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:30
    ch = 0;
  40061c:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:31
    while (ch<100){
  400623:	eb 72                	jmp    400697 <main+0x95>
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:32
        p=(listnode*)malloc(sizeof(listnode));/*分配空间*/
  400625:	bf 28 00 00 00       	mov    $0x28,%edi
  40062a:	e8 91 fe ff ff       	callq  4004c0 <malloc@plt>
  40062f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:33
        p->next=head;/*指定后继指针*/
  400633:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400637:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40063b:	48 89 50 20          	mov    %rdx,0x20(%rax)
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:34
        p->data1 = 100-ch;
  40063f:	b8 64 00 00 00       	mov    $0x64,%eax
  400644:	2b 45 e0             	sub    -0x20(%rbp),%eax
  400647:	89 c2                	mov    %eax,%edx
  400649:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40064d:	48 89 10             	mov    %rdx,(%rax)
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:35
        p->data2 = 2*ch;
  400650:	8b 45 e0             	mov    -0x20(%rbp),%eax
  400653:	01 c0                	add    %eax,%eax
  400655:	89 c2                	mov    %eax,%edx
  400657:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40065b:	48 89 50 08          	mov    %rdx,0x8(%rax)
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:36
        p->temp.data = ch;
  40065f:	8b 55 e0             	mov    -0x20(%rbp),%edx
  400662:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400666:	89 50 10             	mov    %edx,0x10(%rax)
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:37
        p->pat_p = (pat*)malloc(sizeof(pat));
  400669:	bf 04 00 00 00       	mov    $0x4,%edi
  40066e:	e8 4d fe ff ff       	callq  4004c0 <malloc@plt>
  400673:	48 89 c2             	mov    %rax,%rdx
  400676:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40067a:	48 89 50 18          	mov    %rdx,0x18(%rax)
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:38
        p->pat_p->data = ch;
  40067e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400682:	48 8b 40 18          	mov    0x18(%rax),%rax
  400686:	8b 55 e0             	mov    -0x20(%rbp),%edx
  400689:	89 10                	mov    %edx,(%rax)
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:39
        head=p;/*head指针指定到新插入的结点上*/
  40068b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40068f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:40
        ch++;
  400693:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:31
    unsigned int ch;
    linklist  head;
    listnode  *p;
    head=NULL;/*初始化为空*/
    ch = 0;
    while (ch<100){
  400697:	83 7d e0 63          	cmpl   $0x63,-0x20(%rbp)
  40069b:	76 88                	jbe    400625 <main+0x23>
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:44
        head=p;/*head指针指定到新插入的结点上*/
        ch++;
    }


    printf("geting\n");
  40069d:	bf cc 07 40 00       	mov    $0x4007cc,%edi
  4006a2:	e8 d9 fd ff ff       	callq  400480 <puts@plt>
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:45
    p=head;
  4006a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4006ab:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:46
    int temp=0;
  4006af:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:47
    void *p_temp=NULL;
  4006b6:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  4006bd:	00 
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:48
    for(p=head; p; p=p->next)
  4006be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4006c2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4006c6:	eb 34                	jmp    4006fc <main+0xfa>
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:51 (discriminator 3)
    {
        //p_temp = (void *)p->pat_p;
        process(p->data1, p->data2, p->temp.data, p->pat_p->data);
  4006c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4006cc:	48 8b 40 18          	mov    0x18(%rax),%rax
  4006d0:	8b 08                	mov    (%rax),%ecx
  4006d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4006d6:	8b 50 10             	mov    0x10(%rax),%edx
  4006d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4006dd:	48 8b 70 08          	mov    0x8(%rax),%rsi
  4006e1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4006e5:	48 8b 00             	mov    (%rax),%rax
  4006e8:	48 89 c7             	mov    %rax,%rdi
  4006eb:	e8 d6 fe ff ff       	callq  4005c6 <process>
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:48 (discriminator 3)

    printf("geting\n");
    p=head;
    int temp=0;
    void *p_temp=NULL;
    for(p=head; p; p=p->next)
  4006f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4006f4:	48 8b 40 20          	mov    0x20(%rax),%rax
  4006f8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:48 (discriminator 1)
  4006fc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  400701:	75 c5                	jne    4006c8 <main+0xc6>
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:55
        //p_temp = (void *)p->pat_p;
        process(p->data1, p->data2, p->temp.data, p->pat_p->data);
        //printf("p->pat_p->data = %d\n", temp);
        //printf("p->temp = %d\n", p->temp);
    }
    printf("end\n");
  400703:	bf d3 07 40 00       	mov    $0x4007d3,%edi
  400708:	e8 73 fd ff ff       	callq  400480 <puts@plt>
/home/zhangqianlong/Speculative_Snoop/sniper_sim/Test_prog/Link_test/link_test.c:56
}
  40070d:	90                   	nop
  40070e:	c9                   	leaveq 
  40070f:	c3                   	retq   

0000000000400710 <__libc_csu_init>:
__libc_csu_init():
  400710:	41 57                	push   %r15
  400712:	41 89 ff             	mov    %edi,%r15d
  400715:	41 56                	push   %r14
  400717:	49 89 f6             	mov    %rsi,%r14
  40071a:	41 55                	push   %r13
  40071c:	49 89 d5             	mov    %rdx,%r13
  40071f:	41 54                	push   %r12
  400721:	4c 8d 25 e8 06 20 00 	lea    0x2006e8(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  400728:	55                   	push   %rbp
  400729:	48 8d 2d e8 06 20 00 	lea    0x2006e8(%rip),%rbp        # 600e18 <__init_array_end>
  400730:	53                   	push   %rbx
  400731:	4c 29 e5             	sub    %r12,%rbp
  400734:	31 db                	xor    %ebx,%ebx
  400736:	48 c1 fd 03          	sar    $0x3,%rbp
  40073a:	48 83 ec 08          	sub    $0x8,%rsp
  40073e:	e8 0d fd ff ff       	callq  400450 <_init>
  400743:	48 85 ed             	test   %rbp,%rbp
  400746:	74 1e                	je     400766 <__libc_csu_init+0x56>
  400748:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40074f:	00 
  400750:	4c 89 ea             	mov    %r13,%rdx
  400753:	4c 89 f6             	mov    %r14,%rsi
  400756:	44 89 ff             	mov    %r15d,%edi
  400759:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40075d:	48 83 c3 01          	add    $0x1,%rbx
  400761:	48 39 eb             	cmp    %rbp,%rbx
  400764:	75 ea                	jne    400750 <__libc_csu_init+0x40>
  400766:	48 83 c4 08          	add    $0x8,%rsp
  40076a:	5b                   	pop    %rbx
  40076b:	5d                   	pop    %rbp
  40076c:	41 5c                	pop    %r12
  40076e:	41 5d                	pop    %r13
  400770:	41 5e                	pop    %r14
  400772:	41 5f                	pop    %r15
  400774:	c3                   	retq   
  400775:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  40077c:	00 00 00 00 

0000000000400780 <__libc_csu_fini>:
__libc_csu_fini():
  400780:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400784 <_fini>:
_fini():
  400784:	48 83 ec 08          	sub    $0x8,%rsp
  400788:	48 83 c4 08          	add    $0x8,%rsp
  40078c:	c3                   	retq   

Disassembly of section .rodata:

0000000000400790 <_IO_stdin_used>:
  400790:	01 00                	add    %eax,(%rax)
  400792:	02 00                	add    (%rax),%al
  400794:	00 00                	add    %al,(%rax)
  400796:	00 00                	add    %al,(%rax)
  400798:	64                   	fs
  400799:	61                   	(bad)  
  40079a:	74 61                	je     4007fd <_IO_stdin_used+0x6d>
  40079c:	31 3d 25 6c 64 2c    	xor    %edi,0x2c646c25(%rip)        # 2ca473c7 <_end+0x2c446367>
  4007a2:	20 64 61 74          	and    %ah,0x74(%rcx,%riz,2)
  4007a6:	61                   	(bad)  
  4007a7:	32 3d 25 6c 64 2c    	xor    0x2c646c25(%rip),%bh        # 2ca473d2 <_end+0x2c446372>
  4007ad:	20 74 65 6d          	and    %dh,0x6d(%rbp,%riz,2)
  4007b1:	70 20                	jo     4007d3 <_IO_stdin_used+0x43>
  4007b3:	3d 25 64 2c 20       	cmp    $0x202c6425,%eax
  4007b8:	64                   	fs
  4007b9:	61                   	(bad)  
  4007ba:	74 61                	je     40081d <_IO_stdin_used+0x8d>
  4007bc:	20 3d 20 25 64 0a    	and    %bh,0xa642520(%rip)        # aa42ce2 <_end+0xa441c82>
  4007c2:	00 63 72             	add    %ah,0x72(%rbx)
  4007c5:	65                   	gs
  4007c6:	61                   	(bad)  
  4007c7:	74 69                	je     400832 <_IO_stdin_used+0xa2>
  4007c9:	6e                   	outsb  %ds:(%rsi),(%dx)
  4007ca:	67 00 67 65          	add    %ah,0x65(%edi)
  4007ce:	74 69                	je     400839 <_IO_stdin_used+0xa9>
  4007d0:	6e                   	outsb  %ds:(%rsi),(%dx)
  4007d1:	67 00 65 6e          	add    %ah,0x6e(%ebp)
  4007d5:	64                   	fs
	...

Disassembly of section .eh_frame_hdr:

00000000004007d8 <.eh_frame_hdr>:
  4007d8:	01 1b                	add    %ebx,(%rbx)
  4007da:	03 3b                	add    (%rbx),%edi
  4007dc:	3c 00                	cmp    $0x0,%al
  4007de:	00 00                	add    %al,(%rax)
  4007e0:	06                   	(bad)  
  4007e1:	00 00                	add    %al,(%rax)
  4007e3:	00 98 fc ff ff 88    	add    %bl,-0x77000004(%rax)
  4007e9:	00 00                	add    %al,(%rax)
  4007eb:	00 f8                	add    %bh,%al
  4007ed:	fc                   	cld    
  4007ee:	ff                   	(bad)  
  4007ef:	ff 58 00             	lcallq *0x0(%rax)
  4007f2:	00 00                	add    %al,(%rax)
  4007f4:	ee                   	out    %al,(%dx)
  4007f5:	fd                   	std    
  4007f6:	ff                   	(bad)  
  4007f7:	ff b0 00 00 00 2a    	pushq  0x2a000000(%rax)
  4007fd:	fe                   	(bad)  
  4007fe:	ff                   	(bad)  
  4007ff:	ff d0                	callq  *%rax
  400801:	00 00                	add    %al,(%rax)
  400803:	00 38                	add    %bh,(%rax)
  400805:	ff                   	(bad)  
  400806:	ff                   	(bad)  
  400807:	ff f0                	push   %rax
  400809:	00 00                	add    %al,(%rax)
  40080b:	00 a8 ff ff ff 38    	add    %ch,0x38ffffff(%rax)
  400811:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .eh_frame:

0000000000400818 <__FRAME_END__-0x110>:
  400818:	14 00                	adc    $0x0,%al
  40081a:	00 00                	add    %al,(%rax)
  40081c:	00 00                	add    %al,(%rax)
  40081e:	00 00                	add    %al,(%rax)
  400820:	01 7a 52             	add    %edi,0x52(%rdx)
  400823:	00 01                	add    %al,(%rcx)
  400825:	78 10                	js     400837 <_IO_stdin_used+0xa7>
  400827:	01 1b                	add    %ebx,(%rbx)
  400829:	0c 07                	or     $0x7,%al
  40082b:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
  400831:	00 00                	add    %al,(%rax)
  400833:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400836:	00 00                	add    %al,(%rax)
  400838:	98                   	cwtl   
  400839:	fc                   	cld    
  40083a:	ff                   	(bad)  
  40083b:	ff 2a                	ljmpq  *(%rdx)
	...
  400845:	00 00                	add    %al,(%rax)
  400847:	00 14 00             	add    %dl,(%rax,%rax,1)
  40084a:	00 00                	add    %al,(%rax)
  40084c:	00 00                	add    %al,(%rax)
  40084e:	00 00                	add    %al,(%rax)
  400850:	01 7a 52             	add    %edi,0x52(%rdx)
  400853:	00 01                	add    %al,(%rcx)
  400855:	78 10                	js     400867 <_IO_stdin_used+0xd7>
  400857:	01 1b                	add    %ebx,(%rbx)
  400859:	0c 07                	or     $0x7,%al
  40085b:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
  400861:	00 00                	add    %al,(%rax)
  400863:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400866:	00 00                	add    %al,(%rax)
  400868:	08 fc                	or     %bh,%ah
  40086a:	ff                   	(bad)  
  40086b:	ff 60 00             	jmpq   *0x0(%rax)
  40086e:	00 00                	add    %al,(%rax)
  400870:	00 0e                	add    %cl,(%rsi)
  400872:	10 46 0e             	adc    %al,0xe(%rsi)
  400875:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  400878:	0b 77 08             	or     0x8(%rdi),%esi
  40087b:	80 00 3f             	addb   $0x3f,(%rax)
  40087e:	1a 3b                	sbb    (%rbx),%bh
  400880:	2a 33                	sub    (%rbx),%dh
  400882:	24 22                	and    $0x22,%al
  400884:	00 00                	add    %al,(%rax)
  400886:	00 00                	add    %al,(%rax)
  400888:	1c 00                	sbb    $0x0,%al
  40088a:	00 00                	add    %al,(%rax)
  40088c:	44 00 00             	add    %r8b,(%rax)
  40088f:	00 36                	add    %dh,(%rsi)
  400891:	fd                   	std    
  400892:	ff                   	(bad)  
  400893:	ff                   	(bad)  
  400894:	3c 00                	cmp    $0x0,%al
  400896:	00 00                	add    %al,(%rax)
  400898:	00 41 0e             	add    %al,0xe(%rcx)
  40089b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  4008a1:	77 0c                	ja     4008af <_IO_stdin_used+0x11f>
  4008a3:	07                   	(bad)  
  4008a4:	08 00                	or     %al,(%rax)
  4008a6:	00 00                	add    %al,(%rax)
  4008a8:	1c 00                	sbb    $0x0,%al
  4008aa:	00 00                	add    %al,(%rax)
  4008ac:	64 00 00             	add    %al,%fs:(%rax)
  4008af:	00 52 fd             	add    %dl,-0x3(%rdx)
  4008b2:	ff                   	(bad)  
  4008b3:	ff 0e                	decl   (%rsi)
  4008b5:	01 00                	add    %eax,(%rax)
  4008b7:	00 00                	add    %al,(%rax)
  4008b9:	41 0e                	rex.B (bad) 
  4008bb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  4008c1:	03 09                	add    (%rcx),%ecx
  4008c3:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
  4008c6:	08 00                	or     %al,(%rax)
  4008c8:	44 00 00             	add    %r8b,(%rax)
  4008cb:	00 84 00 00 00 40 fe 	add    %al,-0x1c00000(%rax,%rax,1)
  4008d2:	ff                   	(bad)  
  4008d3:	ff 65 00             	jmpq   *0x0(%rbp)
  4008d6:	00 00                	add    %al,(%rax)
  4008d8:	00 42 0e             	add    %al,0xe(%rdx)
  4008db:	10 8f 02 45 0e 18    	adc    %cl,0x180e4502(%rdi)
  4008e1:	8e 03                	mov    (%rbx),%es
  4008e3:	45 0e                	rex.RB (bad) 
  4008e5:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
  4008eb:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86701739 <_end+0xffffffff861006d9>
  4008f1:	06                   	(bad)  
  4008f2:	48 0e                	rex.W (bad) 
  4008f4:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
  4008fa:	6c                   	insb   (%dx),%es:(%rdi)
  4008fb:	0e                   	(bad)  
  4008fc:	38 41 0e             	cmp    %al,0xe(%rcx)
  4008ff:	30 41 0e             	xor    %al,0xe(%rcx)
  400902:	28 42 0e             	sub    %al,0xe(%rdx)
  400905:	20 42 0e             	and    %al,0xe(%rdx)
  400908:	18 42 0e             	sbb    %al,0xe(%rdx)
  40090b:	10 42 0e             	adc    %al,0xe(%rdx)
  40090e:	08 00                	or     %al,(%rax)
  400910:	14 00                	adc    $0x0,%al
  400912:	00 00                	add    %al,(%rax)
  400914:	cc                   	int3   
  400915:	00 00                	add    %al,(%rax)
  400917:	00 68 fe             	add    %ch,-0x2(%rax)
  40091a:	ff                   	(bad)  
  40091b:	ff 02                	incl   (%rdx)
	...

0000000000400928 <__FRAME_END__>:
  400928:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000600e10 <__frame_dummy_init_array_entry>:
__init_array_start():
  600e10:	a0                   	.byte 0xa0
  600e11:	05 40 00 00 00       	add    $0x40,%eax
	...

Disassembly of section .fini_array:

0000000000600e18 <__do_global_dtors_aux_fini_array_entry>:
  600e18:	80 05 40 00 00 00 00 	addb   $0x0,0x40(%rip)        # 600e5f <_DYNAMIC+0x37>
	...

Disassembly of section .jcr:

0000000000600e20 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e28 <_DYNAMIC>:
  600e28:	01 00                	add    %eax,(%rax)
  600e2a:	00 00                	add    %al,(%rax)
  600e2c:	00 00                	add    %al,(%rax)
  600e2e:	00 00                	add    %al,(%rax)
  600e30:	01 00                	add    %eax,(%rax)
  600e32:	00 00                	add    %al,(%rax)
  600e34:	00 00                	add    %al,(%rax)
  600e36:	00 00                	add    %al,(%rax)
  600e38:	0c 00                	or     $0x0,%al
  600e3a:	00 00                	add    %al,(%rax)
  600e3c:	00 00                	add    %al,(%rax)
  600e3e:	00 00                	add    %al,(%rax)
  600e40:	50                   	push   %rax
  600e41:	04 40                	add    $0x40,%al
  600e43:	00 00                	add    %al,(%rax)
  600e45:	00 00                	add    %al,(%rax)
  600e47:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 600e4d <_DYNAMIC+0x25>
  600e4d:	00 00                	add    %al,(%rax)
  600e4f:	00 84 07 40 00 00 00 	add    %al,0x40(%rdi,%rax,1)
  600e56:	00 00                	add    %al,(%rax)
  600e58:	19 00                	sbb    %eax,(%rax)
  600e5a:	00 00                	add    %al,(%rax)
  600e5c:	00 00                	add    %al,(%rax)
  600e5e:	00 00                	add    %al,(%rax)
  600e60:	10 0e                	adc    %cl,(%rsi)
  600e62:	60                   	(bad)  
  600e63:	00 00                	add    %al,(%rax)
  600e65:	00 00                	add    %al,(%rax)
  600e67:	00 1b                	add    %bl,(%rbx)
  600e69:	00 00                	add    %al,(%rax)
  600e6b:	00 00                	add    %al,(%rax)
  600e6d:	00 00                	add    %al,(%rax)
  600e6f:	00 08                	add    %cl,(%rax)
  600e71:	00 00                	add    %al,(%rax)
  600e73:	00 00                	add    %al,(%rax)
  600e75:	00 00                	add    %al,(%rax)
  600e77:	00 1a                	add    %bl,(%rdx)
  600e79:	00 00                	add    %al,(%rax)
  600e7b:	00 00                	add    %al,(%rax)
  600e7d:	00 00                	add    %al,(%rax)
  600e7f:	00 18                	add    %bl,(%rax)
  600e81:	0e                   	(bad)  
  600e82:	60                   	(bad)  
  600e83:	00 00                	add    %al,(%rax)
  600e85:	00 00                	add    %al,(%rax)
  600e87:	00 1c 00             	add    %bl,(%rax,%rax,1)
  600e8a:	00 00                	add    %al,(%rax)
  600e8c:	00 00                	add    %al,(%rax)
  600e8e:	00 00                	add    %al,(%rax)
  600e90:	08 00                	or     %al,(%rax)
  600e92:	00 00                	add    %al,(%rax)
  600e94:	00 00                	add    %al,(%rax)
  600e96:	00 00                	add    %al,(%rax)
  600e98:	f5                   	cmc    
  600e99:	fe                   	(bad)  
  600e9a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600e9d:	00 00                	add    %al,(%rax)
  600e9f:	00 98 02 40 00 00    	add    %bl,0x4002(%rax)
  600ea5:	00 00                	add    %al,(%rax)
  600ea7:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 600ead <_DYNAMIC+0x85>
  600ead:	00 00                	add    %al,(%rax)
  600eaf:	00 48 03             	add    %cl,0x3(%rax)
  600eb2:	40 00 00             	add    %al,(%rax)
  600eb5:	00 00                	add    %al,(%rax)
  600eb7:	00 06                	add    %al,(%rsi)
  600eb9:	00 00                	add    %al,(%rax)
  600ebb:	00 00                	add    %al,(%rax)
  600ebd:	00 00                	add    %al,(%rax)
  600ebf:	00 b8 02 40 00 00    	add    %bh,0x4002(%rax)
  600ec5:	00 00                	add    %al,(%rax)
  600ec7:	00 0a                	add    %cl,(%rdx)
  600ec9:	00 00                	add    %al,(%rax)
  600ecb:	00 00                	add    %al,(%rax)
  600ecd:	00 00                	add    %al,(%rax)
  600ecf:	00 4b 00             	add    %cl,0x0(%rbx)
  600ed2:	00 00                	add    %al,(%rax)
  600ed4:	00 00                	add    %al,(%rax)
  600ed6:	00 00                	add    %al,(%rax)
  600ed8:	0b 00                	or     (%rax),%eax
  600eda:	00 00                	add    %al,(%rax)
  600edc:	00 00                	add    %al,(%rax)
  600ede:	00 00                	add    %al,(%rax)
  600ee0:	18 00                	sbb    %al,(%rax)
  600ee2:	00 00                	add    %al,(%rax)
  600ee4:	00 00                	add    %al,(%rax)
  600ee6:	00 00                	add    %al,(%rax)
  600ee8:	15 00 00 00 00       	adc    $0x0,%eax
	...
  600ef5:	00 00                	add    %al,(%rax)
  600ef7:	00 03                	add    %al,(%rbx)
	...
  600f01:	10 60 00             	adc    %ah,0x0(%rax)
  600f04:	00 00                	add    %al,(%rax)
  600f06:	00 00                	add    %al,(%rax)
  600f08:	02 00                	add    (%rax),%al
  600f0a:	00 00                	add    %al,(%rax)
  600f0c:	00 00                	add    %al,(%rax)
  600f0e:	00 00                	add    %al,(%rax)
  600f10:	78 00                	js     600f12 <_DYNAMIC+0xea>
  600f12:	00 00                	add    %al,(%rax)
  600f14:	00 00                	add    %al,(%rax)
  600f16:	00 00                	add    %al,(%rax)
  600f18:	14 00                	adc    $0x0,%al
  600f1a:	00 00                	add    %al,(%rax)
  600f1c:	00 00                	add    %al,(%rax)
  600f1e:	00 00                	add    %al,(%rax)
  600f20:	07                   	(bad)  
  600f21:	00 00                	add    %al,(%rax)
  600f23:	00 00                	add    %al,(%rax)
  600f25:	00 00                	add    %al,(%rax)
  600f27:	00 17                	add    %dl,(%rdi)
  600f29:	00 00                	add    %al,(%rax)
  600f2b:	00 00                	add    %al,(%rax)
  600f2d:	00 00                	add    %al,(%rax)
  600f2f:	00 d8                	add    %bl,%al
  600f31:	03 40 00             	add    0x0(%rax),%eax
  600f34:	00 00                	add    %al,(%rax)
  600f36:	00 00                	add    %al,(%rax)
  600f38:	07                   	(bad)  
  600f39:	00 00                	add    %al,(%rax)
  600f3b:	00 00                	add    %al,(%rax)
  600f3d:	00 00                	add    %al,(%rax)
  600f3f:	00 c0                	add    %al,%al
  600f41:	03 40 00             	add    0x0(%rax),%eax
  600f44:	00 00                	add    %al,(%rax)
  600f46:	00 00                	add    %al,(%rax)
  600f48:	08 00                	or     %al,(%rax)
  600f4a:	00 00                	add    %al,(%rax)
  600f4c:	00 00                	add    %al,(%rax)
  600f4e:	00 00                	add    %al,(%rax)
  600f50:	18 00                	sbb    %al,(%rax)
  600f52:	00 00                	add    %al,(%rax)
  600f54:	00 00                	add    %al,(%rax)
  600f56:	00 00                	add    %al,(%rax)
  600f58:	09 00                	or     %eax,(%rax)
  600f5a:	00 00                	add    %al,(%rax)
  600f5c:	00 00                	add    %al,(%rax)
  600f5e:	00 00                	add    %al,(%rax)
  600f60:	18 00                	sbb    %al,(%rax)
  600f62:	00 00                	add    %al,(%rax)
  600f64:	00 00                	add    %al,(%rax)
  600f66:	00 00                	add    %al,(%rax)
  600f68:	fe                   	(bad)  
  600f69:	ff                   	(bad)  
  600f6a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f6d:	00 00                	add    %al,(%rax)
  600f6f:	00 a0 03 40 00 00    	add    %ah,0x4003(%rax)
  600f75:	00 00                	add    %al,(%rax)
  600f77:	00 ff                	add    %bh,%bh
  600f79:	ff                   	(bad)  
  600f7a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f7d:	00 00                	add    %al,(%rax)
  600f7f:	00 01                	add    %al,(%rcx)
  600f81:	00 00                	add    %al,(%rax)
  600f83:	00 00                	add    %al,(%rax)
  600f85:	00 00                	add    %al,(%rax)
  600f87:	00 f0                	add    %dh,%al
  600f89:	ff                   	(bad)  
  600f8a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f8d:	00 00                	add    %al,(%rax)
  600f8f:	00 94 03 40 00 00 00 	add    %dl,0x40(%rbx,%rax,1)
	...

Disassembly of section .got:

0000000000600ff8 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	28 0e                	sub    %cl,(%rsi)
  601002:	60                   	(bad)  
	...
  601017:	00 86 04 40 00 00    	add    %al,0x4004(%rsi)
  60101d:	00 00                	add    %al,(%rax)
  60101f:	00 96 04 40 00 00    	add    %dl,0x4004(%rsi)
  601025:	00 00                	add    %al,(%rax)
  601027:	00 a6 04 40 00 00    	add    %ah,0x4004(%rsi)
  60102d:	00 00                	add    %al,(%rax)
  60102f:	00 b6 04 40 00 00    	add    %dh,0x4004(%rsi)
  601035:	00 00                	add    %al,(%rax)
  601037:	00 c6                	add    %al,%dh
  601039:	04 40                	add    $0x40,%al
  60103b:	00 00                	add    %al,(%rax)
  60103d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000601040 <__data_start>:
	...

0000000000601048 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601050 <__bss_start>:
	...

0000000000601058 <p>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x4003d8>
   a:	74 75                	je     81 <_init-0x4003cf>
   c:	20 35 2e 34 2e 31    	and    %dh,0x312e342e(%rip)        # 312e3440 <_end+0x30ce23e0>
  12:	2d 32 75 62 75       	sub    $0x75627532,%eax
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0x4003c1>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	34 2e                	xor    $0x2e,%al
  1f:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  22:	20 35 2e 34 2e 31    	and    %dh,0x312e342e(%rip)        # 312e3456 <_end+0x30ce23f6>
  28:	20 32                	and    %dh,(%rdx)
  2a:	30 31                	xor    %dh,(%rcx)
  2c:	36 30 39             	xor    %bh,%ss:(%rcx)
  2f:	30 34 00             	xor    %dh,(%rax,%rax,1)
  32:	47                   	rex.RXB
  33:	43                   	rex.XB
  34:	43 3a 20             	rex.XB cmp (%r8),%spl
  37:	28 55 62             	sub    %dl,0x62(%rbp)
  3a:	75 6e                	jne    aa <_init-0x4003a6>
  3c:	74 75                	je     b3 <_init-0x40039d>
  3e:	20 34 2e             	and    %dh,(%rsi,%rbp,1)
  41:	38 2e                	cmp    %ch,(%rsi)
  43:	34 2d                	xor    $0x2d,%al
  45:	32 75 62             	xor    0x62(%rbp),%dh
  48:	75 6e                	jne    b8 <_init-0x400398>
  4a:	74 75                	je     c1 <_init-0x40038f>
  4c:	31 7e 31             	xor    %edi,0x31(%rsi)
  4f:	34 2e                	xor    $0x2e,%al
  51:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  54:	33 29                	xor    (%rcx),%ebp
  56:	20 34 2e             	and    %dh,(%rsi,%rbp,1)
  59:	38 2e                	cmp    %ch,(%rsi)
  5b:	34 00                	xor    $0x0,%al

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 00                	or     %al,(%rax)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	c6 05 40 00 00 00 00 	movb   $0x0,0x40(%rip)        # 57 <_init-0x4003f9>
  17:	00 4a 01             	add    %cl,0x1(%rdx)
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	ea                   	(bad)  
   1:	01 00                	add    %eax,(%rax)
   3:	00 04 00             	add    %al,(%rax,%rax,1)
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 01                	or     %al,(%rcx)
   c:	62                   	(bad)  
   d:	00 00                	add    %al,(%rax)
   f:	00 0c 0b             	add    %cl,(%rbx,%rcx,1)
  12:	00 00                	add    %al,(%rax)
  14:	00 af 00 00 00 c6    	add    %ch,-0x3a000000(%rdi)
  1a:	05 40 00 00 00       	add    $0x40,%eax
  1f:	00 00                	add    %al,(%rax)
  21:	4a 01 00             	rex.WX add %rax,(%rax)
	...
  2c:	00 02                	add    %al,(%rdx)
  2e:	08 07                	or     %al,(%rdi)
  30:	f9                   	stc    
  31:	00 00                	add    %al,(%rax)
  33:	00 02                	add    %al,(%rdx)
  35:	01 08                	add    %ecx,(%rax)
  37:	2e 00 00             	add    %al,%cs:(%rax)
  3a:	00 02                	add    %al,(%rdx)
  3c:	02 07                	add    (%rdi),%al
  3e:	3c 00                	cmp    $0x0,%al
  40:	00 00                	add    %al,(%rax)
  42:	02 04 07             	add    (%rdi,%rax,1),%al
  45:	fe 00                	incb   (%rax)
  47:	00 00                	add    %al,(%rax)
  49:	02 01                	add    (%rcx),%al
  4b:	06                   	(bad)  
  4c:	30 00                	xor    %al,(%rax)
  4e:	00 00                	add    %al,(%rax)
  50:	02 02                	add    (%rdx),%al
  52:	05 3d 01 00 00       	add    $0x13d,%eax
  57:	03 04 05 69 6e 74 00 	add    0x746e69(,%rax,1),%eax
  5e:	02 08                	add    (%rax),%cl
  60:	05 2d 01 00 00       	add    $0x12d,%eax
  65:	02 08                	add    (%rax),%cl
  67:	07                   	(bad)  
  68:	17                   	(bad)  
  69:	01 00                	add    %eax,(%rax)
  6b:	00 04 08             	add    %al,(%rax,%rcx,1)
  6e:	02 01                	add    (%rcx),%al
  70:	06                   	(bad)  
  71:	37                   	(bad)  
  72:	00 00                	add    %al,(%rax)
  74:	00 02                	add    %al,(%rdx)
  76:	08 05 28 01 00 00    	or     %al,0x128(%rip)        # 1a4 <_init-0x4002ac>
  7c:	02 08                	add    (%rax),%cl
  7e:	07                   	(bad)  
  7f:	f4                   	hlt    
  80:	00 00                	add    %al,(%rax)
  82:	00 05 17 00 00 00    	add    %al,0x17(%rip)        # 9f <_init-0x4003b1>
  88:	01 04 7c             	add    %eax,(%rsp,%rdi,2)
  8b:	00 00                	add    %al,(%rax)
  8d:	00 06                	add    %al,(%rsi)
  8f:	70 61                	jo     f2 <_init-0x40035e>
  91:	74 00                	je     93 <_init-0x4003bd>
  93:	04 01                	add    $0x1,%al
  95:	05 a7 00 00 00       	add    $0xa7,%eax
  9a:	07                   	(bad)  
  9b:	29 00                	sub    %eax,(%rax)
  9d:	00 00                	add    %al,(%rax)
  9f:	01 06                	add    %eax,(%rsi)
  a1:	57                   	push   %rdi
  a2:	00 00                	add    %al,(%rax)
  a4:	00 00                	add    %al,(%rax)
  a6:	00 08                	add    %cl,(%rax)
  a8:	70 61                	jo     10b <_init-0x400345>
  aa:	74 00                	je     ac <_init-0x4003a4>
  ac:	01 07                	add    %eax,(%rdi)
  ae:	8e 00                	mov    (%rax),%es
  b0:	00 00                	add    %al,(%rax)
  b2:	09 53 00             	or     %edx,0x0(%rbx)
  b5:	00 00                	add    %al,(%rax)
  b7:	28 01                	sub    %al,(%rcx)
  b9:	09 fb                	or     %edi,%ebx
  bb:	00 00                	add    %al,(%rax)
  bd:	00 07                	add    %al,(%rdi)
  bf:	0b 01                	or     (%rcx),%eax
  c1:	00 00                	add    %al,(%rax)
  c3:	01 0a                	add    %ecx,(%rdx)
  c5:	83 00 00             	addl   $0x0,(%rax)
  c8:	00 00                	add    %al,(%rax)
  ca:	07                   	(bad)  
  cb:	11 01                	adc    %eax,(%rcx)
  cd:	00 00                	add    %al,(%rax)
  cf:	01 0b                	add    %ecx,(%rbx)
  d1:	83 00 00             	addl   $0x0,(%rax)
  d4:	00 08                	add    %cl,(%rax)
  d6:	07                   	(bad)  
  d7:	38 01                	cmp    %al,(%rcx)
  d9:	00 00                	add    %al,(%rax)
  db:	01 0c a7             	add    %ecx,(%rdi,%riz,4)
  de:	00 00                	add    %al,(%rax)
  e0:	00 10                	add    %dl,(%rax)
  e2:	07                   	(bad)  
  e3:	00 00                	add    %al,(%rax)
  e5:	00 00                	add    %al,(%rax)
  e7:	01 0d fb 00 00 00    	add    %ecx,0xfb(%rip)        # 1e8 <_init-0x400268>
  ed:	18 07                	sbb    %al,(%rdi)
  ef:	06                   	(bad)  
  f0:	00 00                	add    %al,(%rax)
  f2:	00 01                	add    %al,(%rcx)
  f4:	0e                   	(bad)  
  f5:	01 01                	add    %eax,(%rcx)
  f7:	00 00                	add    %al,(%rax)
  f9:	20 00                	and    %al,(%rax)
  fb:	0a 08                	or     (%rax),%cl
  fd:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
  fe:	00 00                	add    %al,(%rax)
 100:	00 0a                	add    %cl,(%rdx)
 102:	08 b2 00 00 00 05    	or     %dh,0x5000000(%rdx)
 108:	4f 00 00             	rex.WRXB add %r8b,(%r8)
 10b:	00 01                	add    %al,(%rcx)
 10d:	0f b2 00             	lss    (%rax),%eax
 110:	00 00                	add    %al,(%rax)
 112:	05 20 00 00 00       	add    $0x20,%eax
 117:	01 11                	add    %edx,(%rcx)
 119:	1d 01 00 00 0a       	sbb    $0xa000001,%eax
 11e:	08 07                	or     %al,(%rdi)
 120:	01 00                	add    %eax,(%rax)
 122:	00 0b                	add    %cl,(%rbx)
 124:	20 01                	and    %al,(%rcx)
 126:	00 00                	add    %al,(%rax)
 128:	01 13                	add    %edx,(%rbx)
 12a:	c6 05 40 00 00 00 00 	movb   $0x0,0x40(%rip)        # 171 <_init-0x4002df>
 131:	00 3c 00             	add    %bh,(%rax,%rax,1)
 134:	00 00                	add    %al,(%rax)
 136:	00 00                	add    %al,(%rax)
 138:	00 00                	add    %al,(%rax)
 13a:	01 9c 79 01 00 00 0c 	add    %ebx,0xc000001(%rcx,%rdi,2)
 141:	0b 01                	or     (%rcx),%eax
 143:	00 00                	add    %al,(%rax)
 145:	01 13                	add    %edx,(%rbx)
 147:	83 00 00             	addl   $0x0,(%rax)
 14a:	00 02                	add    %al,(%rdx)
 14c:	91                   	xchg   %eax,%ecx
 14d:	68 0c 11 01 00       	pushq  $0x1110c
 152:	00 01                	add    %al,(%rcx)
 154:	13 83 00 00 00 02    	adc    0x2000000(%rbx),%eax
 15a:	91                   	xchg   %eax,%ecx
 15b:	60                   	(bad)  
 15c:	0c 38                	or     $0x38,%al
 15e:	01 00                	add    %eax,(%rax)
 160:	00 01                	add    %al,(%rcx)
 162:	13 57 00             	adc    0x0(%rdi),%edx
 165:	00 00                	add    %al,(%rax)
 167:	02 91 5c 0c 29 00    	add    0x290c5c(%rcx),%dl
 16d:	00 00                	add    %al,(%rax)
 16f:	01 13                	add    %edx,(%rbx)
 171:	57                   	push   %rdi
 172:	00 00                	add    %al,(%rax)
 174:	00 02                	add    %al,(%rdx)
 176:	91                   	xchg   %eax,%ecx
 177:	58                   	pop    %rax
 178:	00 0d 58 00 00 00    	add    %cl,0x58(%rip)        # 1d6 <_init-0x40027a>
 17e:	01 17                	add    %edx,(%rdi)
 180:	02 06                	add    (%rsi),%al
 182:	40 00 00             	add    %al,(%rax)
 185:	00 00                	add    %al,(%rax)
 187:	00 0e                	add    %cl,(%rsi)
 189:	01 00                	add    %eax,(%rax)
 18b:	00 00                	add    %al,(%rax)
 18d:	00 00                	add    %al,(%rax)
 18f:	00 01                	add    %al,(%rcx)
 191:	9c                   	pushfq 
 192:	da 01                	fiaddl (%rcx)
 194:	00 00                	add    %al,(%rax)
 196:	0e                   	(bad)  
 197:	63 68 00             	movslq 0x0(%rax),%ebp
 19a:	01 1a                	add    %ebx,(%rdx)
 19c:	42 00 00             	rex.X add %al,(%rax)
 19f:	00 02                	add    %al,(%rdx)
 1a1:	91                   	xchg   %eax,%ecx
 1a2:	50                   	push   %rax
 1a3:	0f 5d 00             	minps  (%rax),%xmm0
 1a6:	00 00                	add    %al,(%rax)
 1a8:	01 1b                	add    %ebx,(%rbx)
 1aa:	12 01                	adc    (%rcx),%al
 1ac:	00 00                	add    %al,(%rax)
 1ae:	02 91 58 0e 70 00    	add    0x700e58(%rcx),%dl
 1b4:	01 1c 1d 01 00 00 02 	add    %ebx,0x2000001(,%rbx,1)
 1bb:	91                   	xchg   %eax,%ecx
 1bc:	60                   	(bad)  
 1bd:	0f 38 01 00          	phaddw (%rax),%mm0
 1c1:	00 01                	add    %al,(%rcx)
 1c3:	2e                   	cs
 1c4:	57                   	push   %rdi
 1c5:	00 00                	add    %al,(%rax)
 1c7:	00 02                	add    %al,(%rdx)
 1c9:	91                   	xchg   %eax,%ecx
 1ca:	54                   	push   %rsp
 1cb:	0f 36                	(bad)  
 1cd:	01 00                	add    %eax,(%rax)
 1cf:	00 01                	add    %al,(%rcx)
 1d1:	2f                   	(bad)  
 1d2:	6c                   	insb   (%dx),%es:(%rdi)
 1d3:	00 00                	add    %al,(%rax)
 1d5:	00 02                	add    %al,(%rdx)
 1d7:	91                   	xchg   %eax,%ecx
 1d8:	68 00 10 70 00       	pushq  $0x701000
 1dd:	01 12                	add    %edx,(%rdx)
 1df:	1d 01 00 00 09       	sbb    $0x9000001,%eax
 1e4:	03 58 10             	add    0x10(%rax),%ebx
 1e7:	60                   	(bad)  
 1e8:	00 00                	add    %al,(%rax)
 1ea:	00 00                	add    %al,(%rax)
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%rcx)
   2:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b1316 <_end+0x2ab02b6>
   8:	0e                   	(bad)  
   9:	1b 0e                	sbb    (%rsi),%ecx
   b:	11 01                	adc    %eax,(%rcx)
   d:	12 07                	adc    (%rdi),%al
   f:	10 17                	adc    %dl,(%rdi)
  11:	00 00                	add    %al,(%rax)
  13:	02 24 00             	add    (%rax,%rax,1),%ah
  16:	0b 0b                	or     (%rbx),%ecx
  18:	3e 0b 03             	or     %ds:(%rbx),%eax
  1b:	0e                   	(bad)  
  1c:	00 00                	add    %al,(%rax)
  1e:	03 24 00             	add    (%rax,%rax,1),%esp
  21:	0b 0b                	or     (%rbx),%ecx
  23:	3e 0b 03             	or     %ds:(%rbx),%eax
  26:	08 00                	or     %al,(%rax)
  28:	00 04 0f             	add    %al,(%rdi,%rcx,1)
  2b:	00 0b                	add    %cl,(%rbx)
  2d:	0b 00                	or     (%rax),%eax
  2f:	00 05 16 00 03 0e    	add    %al,0xe030016(%rip)        # e03004b <_end+0xda2efeb>
  35:	3a 0b                	cmp    (%rbx),%cl
  37:	3b 0b                	cmp    (%rbx),%ecx
  39:	49 13 00             	adc    (%r8),%rax
  3c:	00 06                	add    %al,(%rsi)
  3e:	13 01                	adc    (%rcx),%eax
  40:	03 08                	add    (%rax),%ecx
  42:	0b 0b                	or     (%rbx),%ecx
  44:	3a 0b                	cmp    (%rbx),%cl
  46:	3b 0b                	cmp    (%rbx),%ecx
  48:	01 13                	add    %edx,(%rbx)
  4a:	00 00                	add    %al,(%rax)
  4c:	07                   	(bad)  
  4d:	0d 00 03 0e 3a       	or     $0x3a0e0300,%eax
  52:	0b 3b                	or     (%rbx),%edi
  54:	0b 49 13             	or     0x13(%rcx),%ecx
  57:	38 0b                	cmp    %cl,(%rbx)
  59:	00 00                	add    %al,(%rax)
  5b:	08 16                	or     %dl,(%rsi)
  5d:	00 03                	add    %al,(%rbx)
  5f:	08 3a                	or     %bh,(%rdx)
  61:	0b 3b                	or     (%rbx),%edi
  63:	0b 49 13             	or     0x13(%rcx),%ecx
  66:	00 00                	add    %al,(%rax)
  68:	09 13                	or     %edx,(%rbx)
  6a:	01 03                	add    %eax,(%rbx)
  6c:	0e                   	(bad)  
  6d:	0b 0b                	or     (%rbx),%ecx
  6f:	3a 0b                	cmp    (%rbx),%cl
  71:	3b 0b                	cmp    (%rbx),%ecx
  73:	01 13                	add    %edx,(%rbx)
  75:	00 00                	add    %al,(%rax)
  77:	0a 0f                	or     (%rdi),%cl
  79:	00 0b                	add    %cl,(%rbx)
  7b:	0b 49 13             	or     0x13(%rcx),%ecx
  7e:	00 00                	add    %al,(%rax)
  80:	0b 2e                	or     (%rsi),%ebp
  82:	01 3f                	add    %edi,(%rdi)
  84:	19 03                	sbb    %eax,(%rbx)
  86:	0e                   	(bad)  
  87:	3a 0b                	cmp    (%rbx),%cl
  89:	3b 0b                	cmp    (%rbx),%ecx
  8b:	27                   	(bad)  
  8c:	19 11                	sbb    %edx,(%rcx)
  8e:	01 12                	add    %edx,(%rdx)
  90:	07                   	(bad)  
  91:	40 18 96 42 19 01 13 	sbb    %dl,0x13011942(%rsi)
  98:	00 00                	add    %al,(%rax)
  9a:	0c 05                	or     $0x5,%al
  9c:	00 03                	add    %al,(%rbx)
  9e:	0e                   	(bad)  
  9f:	3a 0b                	cmp    (%rbx),%cl
  a1:	3b 0b                	cmp    (%rbx),%ecx
  a3:	49 13 02             	adc    (%r10),%rax
  a6:	18 00                	sbb    %al,(%rax)
  a8:	00 0d 2e 01 3f 19    	add    %cl,0x193f012e(%rip)        # 193f01dc <_end+0x18def17c>
  ae:	03 0e                	add    (%rsi),%ecx
  b0:	3a 0b                	cmp    (%rbx),%cl
  b2:	3b 0b                	cmp    (%rbx),%ecx
  b4:	11 01                	adc    %eax,(%rcx)
  b6:	12 07                	adc    (%rdi),%al
  b8:	40 18 96 42 19 01 13 	sbb    %dl,0x13011942(%rsi)
  bf:	00 00                	add    %al,(%rax)
  c1:	0e                   	(bad)  
  c2:	34 00                	xor    $0x0,%al
  c4:	03 08                	add    (%rax),%ecx
  c6:	3a 0b                	cmp    (%rbx),%cl
  c8:	3b 0b                	cmp    (%rbx),%ecx
  ca:	49 13 02             	adc    (%r10),%rax
  cd:	18 00                	sbb    %al,(%rax)
  cf:	00 0f                	add    %cl,(%rdi)
  d1:	34 00                	xor    $0x0,%al
  d3:	03 0e                	add    (%rsi),%ecx
  d5:	3a 0b                	cmp    (%rbx),%cl
  d7:	3b 0b                	cmp    (%rbx),%ecx
  d9:	49 13 02             	adc    (%r10),%rax
  dc:	18 00                	sbb    %al,(%rax)
  de:	00 10                	add    %dl,(%rax)
  e0:	34 00                	xor    $0x0,%al
  e2:	03 08                	add    (%rax),%ecx
  e4:	3a 0b                	cmp    (%rbx),%cl
  e6:	3b 0b                	cmp    (%rbx),%ecx
  e8:	49 13 3f             	adc    (%r15),%rdi
  eb:	19 02                	sbb    %eax,(%rdx)
  ed:	18 00                	sbb    %al,(%rax)
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	6f                   	outsl  %ds:(%rsi),(%dx)
   1:	00 00                	add    %al,(%rax)
   3:	00 02                	add    %al,(%rdx)
   5:	00 22                	add    %ah,(%rdx)
   7:	00 00                	add    %al,(%rax)
   9:	00 01                	add    %al,(%rcx)
   b:	01 fb                	add    %edi,%ebx
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
  13:	01 00                	add    %eax,(%rax)
  15:	00 00                	add    %al,(%rax)
  17:	01 00                	add    %eax,(%rax)
  19:	00 01                	add    %al,(%rcx)
  1b:	00 6c 69 6e          	add    %ch,0x6e(%rcx,%rbp,2)
  1f:	6b 5f 74 65          	imul   $0x65,0x74(%rdi),%ebx
  23:	73 74                	jae    99 <_init-0x4003b7>
  25:	2e 63 00             	movslq %cs:(%rax),%eax
  28:	00 00                	add    %al,(%rax)
  2a:	00 00                	add    %al,(%rax)
  2c:	00 09                	add    %cl,(%rcx)
  2e:	02 c6                	add    %dh,%al
  30:	05 40 00 00 00       	add    $0x40,%eax
  35:	00 00                	add    %al,(%rax)
  37:	03 13                	add    (%rbx),%edx
  39:	01 08                	add    %ecx,(%rax)
  3b:	59                   	pop    %rcx
  3c:	02 23                	add    (%rbx),%ah
  3e:	13 3e                	adc    (%rsi),%edi
  40:	83 a2 83 75 2f d7 bb 	andl   $0xffffffbb,-0x28d08a7d(%rdx)
  47:	08 13                	or     %dl,(%rbx)
  49:	e5 9f                	in     $0x9f,%eax
  4b:	08 4b c9             	or     %cl,-0x37(%rbx)
  4e:	83 03 77             	addl   $0x77,(%rbx)
  51:	4a 03 0d 66 9f 83 75 	rex.WX add 0x75839f66(%rip),%rcx        # 75839fbe <_end+0x75238f5e>
  58:	83 00 02             	addl   $0x2,(%rax)
  5b:	04 03                	add    $0x3,%al
  5d:	a1 00 02 04 03 02 28 	movabs 0xf280203040200,%eax
  64:	0f 00 
  66:	02 04 01             	add    (%rcx,%rax,1),%al
  69:	06                   	(bad)  
  6a:	ba 06 7b 9f 02       	mov    $0x29f7b06,%edx
  6f:	03 00                	add    (%rax),%eax
  71:	01 01                	add    %eax,(%rcx)

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	70 61                	jo     63 <_init-0x4003ed>
   2:	74 5f                	je     63 <_init-0x4003ed>
   4:	70 00                	jo     6 <_init-0x40044a>
   6:	6e                   	outsb  %ds:(%rsi),(%dx)
   7:	65                   	gs
   8:	78 74                	js     7e <_init-0x4003d2>
   a:	00 6c 69 6e          	add    %ch,0x6e(%rcx,%rbp,2)
   e:	6b 5f 74 65          	imul   $0x65,0x74(%rdi),%ebx
  12:	73 74                	jae    88 <_init-0x4003c8>
  14:	2e 63 00             	movslq %cs:(%rax),%eax
  17:	75 69                	jne    82 <_init-0x4003ce>
  19:	6e                   	outsb  %ds:(%rsi),(%dx)
  1a:	74 36                	je     52 <_init-0x4003fe>
  1c:	34 5f                	xor    $0x5f,%al
  1e:	74 00                	je     20 <_init-0x400430>
  20:	6c                   	insb   (%dx),%es:(%rdi)
  21:	69 6e 6b 6c 69 73 74 	imul   $0x7473696c,0x6b(%rsi),%ebp
  28:	00 64 61 74          	add    %ah,0x74(%rcx,%riz,2)
  2c:	61                   	(bad)  
  2d:	00 75 6e             	add    %dh,0x6e(%rbp)
  30:	73 69                	jae    9b <_init-0x4003b5>
  32:	67 6e                	outsb  %ds:(%esi),(%dx)
  34:	65 64 20 63 68       	gs and %ah,%fs:%gs:0x68(%rbx)
  39:	61                   	(bad)  
  3a:	72 00                	jb     3c <_init-0x400414>
  3c:	73 68                	jae    a6 <_init-0x4003aa>
  3e:	6f                   	outsl  %ds:(%rsi),(%dx)
  3f:	72 74                	jb     b5 <_init-0x40039b>
  41:	20 75 6e             	and    %dh,0x6e(%rbp)
  44:	73 69                	jae    af <_init-0x4003a1>
  46:	67 6e                	outsb  %ds:(%esi),(%dx)
  48:	65 64 20 69 6e       	gs and %ch,%fs:%gs:0x6e(%rcx)
  4d:	74 00                	je     4f <_init-0x400401>
  4f:	6c                   	insb   (%dx),%es:(%rdi)
  50:	69 73 74 6e 6f 64 65 	imul   $0x65646f6e,0x74(%rbx),%esi
  57:	00 6d 61             	add    %ch,0x61(%rbp)
  5a:	69 6e 00 68 65 61 64 	imul   $0x64616568,0x0(%rsi),%ebp
  61:	00 47 4e             	add    %al,0x4e(%rdi)
  64:	55                   	push   %rbp
  65:	20 43 31             	and    %al,0x31(%rbx)
  68:	31 20                	xor    %esp,(%rax)
  6a:	35 2e 34 2e 31       	xor    $0x312e342e,%eax
  6f:	20 32                	and    %dh,(%rdx)
  71:	30 31                	xor    %dh,(%rcx)
  73:	36 30 39             	xor    %bh,%ss:(%rcx)
  76:	30 34 20             	xor    %dh,(%rax,%riz,1)
  79:	2d 6d 74 75 6e       	sub    $0x6e75746d,%eax
  7e:	65                   	gs
  7f:	3d 67 65 6e 65       	cmp    $0x656e6567,%eax
  84:	72 69                	jb     ef <_init-0x400361>
  86:	63 20                	movslq (%rax),%esp
  88:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
  8d:	68 3d 78 38 36       	pushq  $0x3638783d
  92:	2d 36 34 20 2d       	sub    $0x2d203436,%eax
  97:	67 20 2d 4f 30 20 2d 	and    %ch,0x2d20304f(%eip)        # 2d2030ed <_end+0x2cc0208d>
  9e:	66                   	data16
  9f:	73 74                	jae    115 <_init-0x40033b>
  a1:	61                   	(bad)  
  a2:	63 6b 2d             	movslq 0x2d(%rbx),%ebp
  a5:	70 72                	jo     119 <_init-0x400337>
  a7:	6f                   	outsl  %ds:(%rsi),(%dx)
  a8:	74 65                	je     10f <_init-0x400341>
  aa:	63 74 6f 72          	movslq 0x72(%rdi,%rbp,2),%esi
  ae:	00 2f                	add    %ch,(%rdi)
  b0:	68 6f 6d 65 2f       	pushq  $0x2f656d6f
  b5:	7a 68                	jp     11f <_init-0x400331>
  b7:	61                   	(bad)  
  b8:	6e                   	outsb  %ds:(%rsi),(%dx)
  b9:	67 71 69             	addr32 jno 125 <_init-0x40032b>
  bc:	61                   	(bad)  
  bd:	6e                   	outsb  %ds:(%rsi),(%dx)
  be:	6c                   	insb   (%dx),%es:(%rdi)
  bf:	6f                   	outsl  %ds:(%rsi),(%dx)
  c0:	6e                   	outsb  %ds:(%rsi),(%dx)
  c1:	67 2f                	addr32 (bad) 
  c3:	53                   	push   %rbx
  c4:	70 65                	jo     12b <_init-0x400325>
  c6:	63 75 6c             	movslq 0x6c(%rbp),%esi
  c9:	61                   	(bad)  
  ca:	74 69                	je     135 <_init-0x40031b>
  cc:	76 65                	jbe    133 <_init-0x40031d>
  ce:	5f                   	pop    %rdi
  cf:	53                   	push   %rbx
  d0:	6e                   	outsb  %ds:(%rsi),(%dx)
  d1:	6f                   	outsl  %ds:(%rsi),(%dx)
  d2:	6f                   	outsl  %ds:(%rsi),(%dx)
  d3:	70 2f                	jo     104 <_init-0x40034c>
  d5:	73 6e                	jae    145 <_init-0x40030b>
  d7:	69 70 65 72 5f 73 69 	imul   $0x69735f72,0x65(%rax),%esi
  de:	6d                   	insl   (%dx),%es:(%rdi)
  df:	2f                   	(bad)  
  e0:	54                   	push   %rsp
  e1:	65                   	gs
  e2:	73 74                	jae    158 <_init-0x4002f8>
  e4:	5f                   	pop    %rdi
  e5:	70 72                	jo     159 <_init-0x4002f7>
  e7:	6f                   	outsl  %ds:(%rsi),(%dx)
  e8:	67 2f                	addr32 (bad) 
  ea:	4c 69 6e 6b 5f 74 65 	imul   $0x7365745f,0x6b(%rsi),%r13
  f1:	73 
  f2:	74 00                	je     f4 <_init-0x40035c>
  f4:	6c                   	insb   (%dx),%es:(%rdi)
  f5:	6f                   	outsl  %ds:(%rsi),(%dx)
  f6:	6e                   	outsb  %ds:(%rsi),(%dx)
  f7:	67 20 6c 6f 6e       	and    %ch,0x6e(%edi,%ebp,2)
  fc:	67 20 75 6e          	and    %dh,0x6e(%ebp)
 100:	73 69                	jae    16b <_init-0x4002e5>
 102:	67 6e                	outsb  %ds:(%esi),(%dx)
 104:	65 64 20 69 6e       	gs and %ch,%fs:%gs:0x6e(%rcx)
 109:	74 00                	je     10b <_init-0x400345>
 10b:	64                   	fs
 10c:	61                   	(bad)  
 10d:	74 61                	je     170 <_init-0x4002e0>
 10f:	31 00                	xor    %eax,(%rax)
 111:	64                   	fs
 112:	61                   	(bad)  
 113:	74 61                	je     176 <_init-0x4002da>
 115:	32 00                	xor    (%rax),%al
 117:	73 69                	jae    182 <_init-0x4002ce>
 119:	7a 65                	jp     180 <_init-0x4002d0>
 11b:	74 79                	je     196 <_init-0x4002ba>
 11d:	70 65                	jo     184 <_init-0x4002cc>
 11f:	00 70 72             	add    %dh,0x72(%rax)
 122:	6f                   	outsl  %ds:(%rsi),(%dx)
 123:	63 65 73             	movslq 0x73(%rbp),%esp
 126:	73 00                	jae    128 <_init-0x400328>
 128:	6c                   	insb   (%dx),%es:(%rdi)
 129:	6f                   	outsl  %ds:(%rsi),(%dx)
 12a:	6e                   	outsb  %ds:(%rsi),(%dx)
 12b:	67 20 6c 6f 6e       	and    %ch,0x6e(%edi,%ebp,2)
 130:	67 20 69 6e          	and    %ch,0x6e(%ecx)
 134:	74 00                	je     136 <_init-0x40031a>
 136:	70 5f                	jo     197 <_init-0x4002b9>
 138:	74 65                	je     19f <_init-0x4002b1>
 13a:	6d                   	insl   (%dx),%es:(%rdi)
 13b:	70 00                	jo     13d <_init-0x400313>
 13d:	73 68                	jae    1a7 <_init-0x4002a9>
 13f:	6f                   	outsl  %ds:(%rsi),(%dx)
 140:	72 74                	jb     1b6 <_init-0x40029a>
 142:	20 69 6e             	and    %ch,0x6e(%rcx)
 145:	74 00                	je     147 <_init-0x400309>
